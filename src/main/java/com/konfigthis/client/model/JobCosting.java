/*
 * Paycor Public API
 *  Welcome to Paycor's Public API! This document is a reference for the APIs Paycor has available, and acts as a complement to the \"Guides\" section.   # Getting Started  <strong>To learn more about getting started with Paycor's Public APIs, check out our <a href=\"/guides\">Guides.</a></strong>  # GET, PUT, POST  * When requesting object, use GET endpoints. All list endpoints support paging, as described [in the other doc].  * When creating an object, use POST endpoints. Your code will need to create an object and send it to Paycor in your API call request body as JSON. You can use the \"request sample\" body as a starting point. Our endpoints will return a reference to the created object (the ID and GET API URL) for your system. * When updating an object, you will use PUT endpoints. The general flow would be to: GET the object you want to update, modify the fields as desired, then PUT the object (as JSON in the request body) to our endpoints. Some fields like the object's ID cannot be updated because they are system-set.'   # Error Handling  * 400: Please consult the response text to correct your request information.  * 401 with response \"Access denied due to missing subscription key\": Please include your APIM Subscription Key as header Ocp-Apim-Subscription-Key or querystring parameter subscription-key.  * 401 with no response: Please ensure you included a valid & current Access Token in the Authorization header. * 403: Please ensure your Access Token's scope has all the relevant access you need, on the AppCreator Data Access screen.  * 404: Please validate the API route you are using. If that is correct, one of your IDs most likely does not exist or is not in a valid state.  * 429: Paycor implements rate limits for our Public API. Each customer (implemented via APIM subscription key) has a limited number of calls. The number of calls is counted across all APIs, not per individual API. Please use bulk endpoints where available and spread your calls over a wider timespan.   * The default rate limit is up to 1000 API calls per minute (total across all our Public APIs).  * 500: Please contact Paycor. When you make a POST or PUT call and receive a 500, please do not retry the call automatically - this may result in double-posting. GETs can be safely retried.   # IDs  * ClientId = LegalEntityId * TenantId = CompanyId * EmployeeId is not visible in Paycor's UI, you must retrieve it from the Public API  # Earnings, Deductions, Taxes  This section describes the domain model for Paycor's Earnings, Deductions, and Taxes. This will provide background for many paydata-related Public API endpoints.   Paycor stores Earnings, Deductions, and Taxes each at three levels: * Global: Same data across all legal entities. Setup by Paycor for customers to choose from. Sample Codes (note these will not be setup on every Legal Entity):   * Earnings: REG, OT   * Taxes: FITWH, SOC, SOCER, OHCIN   * Deductions: 401k, KMat, H125, UWay * Legal Entity or Tenant: Codes setup &amp; customized on the legal entity or Tenant level. Must be tied to a Global Code.    * Perform UI allows creating Deduction and Earning codes on Tenant level (under Configure Company nav menu). These will be returned by the Legal Entity Public API endpoints.  * Employee: codes setup on a particular employee, tied to a Legal Entity-level or Tenant-level code   * Employee Earnings/Deductions/Taxes are applied during payroll. Many properties are inherited from the Legal Entity or Global levels, but some can be overridden.   # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EmploymentStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * JobCosting
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class JobCosting {
  public static final String SERIALIZED_NAME_LEGAL_ENTITY_ID = "LegalEntityId";
  @SerializedName(SERIALIZED_NAME_LEGAL_ENTITY_ID)
  private String legalEntityId;

  public static final String SERIALIZED_NAME_CHECK_DATE = "CheckDate";
  @SerializedName(SERIALIZED_NAME_CHECK_DATE)
  private OffsetDateTime checkDate;

  public static final String SERIALIZED_NAME_DEPARTMENT_DESCRIPTION = "DepartmentDescription";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_DESCRIPTION)
  private String departmentDescription;

  public static final String SERIALIZED_NAME_DEPARTMENT_CODE = "DepartmentCode";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_CODE)
  private Long departmentCode;

  public static final String SERIALIZED_NAME_LABOR_CATEGORY1_CODE = "LaborCategory1Code";
  @SerializedName(SERIALIZED_NAME_LABOR_CATEGORY1_CODE)
  private Integer laborCategory1Code;

  public static final String SERIALIZED_NAME_LABOR_CODE1 = "LaborCode1";
  @SerializedName(SERIALIZED_NAME_LABOR_CODE1)
  private String laborCode1;

  public static final String SERIALIZED_NAME_LABOR_CODE1_ID = "LaborCode1Id";
  @SerializedName(SERIALIZED_NAME_LABOR_CODE1_ID)
  private String laborCode1Id;

  public static final String SERIALIZED_NAME_LABOR_CODE1_DESCRIPTION = "LaborCode1Description";
  @SerializedName(SERIALIZED_NAME_LABOR_CODE1_DESCRIPTION)
  private String laborCode1Description;

  public static final String SERIALIZED_NAME_LABOR_CATEGORY2_CODE = "LaborCategory2Code";
  @SerializedName(SERIALIZED_NAME_LABOR_CATEGORY2_CODE)
  private Integer laborCategory2Code;

  public static final String SERIALIZED_NAME_LABOR_CODE2 = "LaborCode2";
  @SerializedName(SERIALIZED_NAME_LABOR_CODE2)
  private String laborCode2;

  public static final String SERIALIZED_NAME_LABOR_CODE2_ID = "LaborCode2Id";
  @SerializedName(SERIALIZED_NAME_LABOR_CODE2_ID)
  private String laborCode2Id;

  public static final String SERIALIZED_NAME_LABOR_CODE2_DESCRIPTION = "LaborCode2Description";
  @SerializedName(SERIALIZED_NAME_LABOR_CODE2_DESCRIPTION)
  private String laborCode2Description;

  public static final String SERIALIZED_NAME_LABOR_CATEGORY3_CODE = "LaborCategory3Code";
  @SerializedName(SERIALIZED_NAME_LABOR_CATEGORY3_CODE)
  private Integer laborCategory3Code;

  public static final String SERIALIZED_NAME_LABOR_CODE3 = "LaborCode3";
  @SerializedName(SERIALIZED_NAME_LABOR_CODE3)
  private String laborCode3;

  public static final String SERIALIZED_NAME_LABOR_CODE3_ID = "LaborCode3Id";
  @SerializedName(SERIALIZED_NAME_LABOR_CODE3_ID)
  private String laborCode3Id;

  public static final String SERIALIZED_NAME_LABOR_CODE3_DESCRIPTION = "LaborCode3Description";
  @SerializedName(SERIALIZED_NAME_LABOR_CODE3_DESCRIPTION)
  private String laborCode3Description;

  public static final String SERIALIZED_NAME_LABOR_CATEGORY4_CODE = "LaborCategory4Code";
  @SerializedName(SERIALIZED_NAME_LABOR_CATEGORY4_CODE)
  private Integer laborCategory4Code;

  public static final String SERIALIZED_NAME_LABOR_CODE4 = "LaborCode4";
  @SerializedName(SERIALIZED_NAME_LABOR_CODE4)
  private String laborCode4;

  public static final String SERIALIZED_NAME_LABOR_CODE4_ID = "LaborCode4Id";
  @SerializedName(SERIALIZED_NAME_LABOR_CODE4_ID)
  private String laborCode4Id;

  public static final String SERIALIZED_NAME_LABOR_CODE4_DESCRIPTION = "LaborCode4Description";
  @SerializedName(SERIALIZED_NAME_LABOR_CODE4_DESCRIPTION)
  private String laborCode4Description;

  public static final String SERIALIZED_NAME_LABOR_CATEGORY5_CODE = "LaborCategory5Code";
  @SerializedName(SERIALIZED_NAME_LABOR_CATEGORY5_CODE)
  private Integer laborCategory5Code;

  public static final String SERIALIZED_NAME_LABOR_CODE5 = "LaborCode5";
  @SerializedName(SERIALIZED_NAME_LABOR_CODE5)
  private String laborCode5;

  public static final String SERIALIZED_NAME_LABOR_CODE5_ID = "LaborCode5Id";
  @SerializedName(SERIALIZED_NAME_LABOR_CODE5_ID)
  private String laborCode5Id;

  public static final String SERIALIZED_NAME_LABOR_CODE5_DESCRIPTION = "LaborCode5Description";
  @SerializedName(SERIALIZED_NAME_LABOR_CODE5_DESCRIPTION)
  private String laborCode5Description;

  public static final String SERIALIZED_NAME_LABOR_CATEGORY6_CODE = "LaborCategory6Code";
  @SerializedName(SERIALIZED_NAME_LABOR_CATEGORY6_CODE)
  private Integer laborCategory6Code;

  public static final String SERIALIZED_NAME_LABOR_CODE6 = "LaborCode6";
  @SerializedName(SERIALIZED_NAME_LABOR_CODE6)
  private String laborCode6;

  public static final String SERIALIZED_NAME_LABOR_CODE6_ID = "LaborCode6Id";
  @SerializedName(SERIALIZED_NAME_LABOR_CODE6_ID)
  private String laborCode6Id;

  public static final String SERIALIZED_NAME_LABOR_CODE6_DESCRIPTION = "LaborCode6Description";
  @SerializedName(SERIALIZED_NAME_LABOR_CODE6_DESCRIPTION)
  private String laborCode6Description;

  public static final String SERIALIZED_NAME_GL_ACCOUNT_NUMBER = "GLAccountNumber";
  @SerializedName(SERIALIZED_NAME_GL_ACCOUNT_NUMBER)
  private String glAccountNumber;

  public static final String SERIALIZED_NAME_GL_ACCOUNT_DESCRIPTION = "GLAccountDescription";
  @SerializedName(SERIALIZED_NAME_GL_ACCOUNT_DESCRIPTION)
  private String glAccountDescription;

  public static final String SERIALIZED_NAME_CREDIT_AMOUNT = "CreditAmount";
  @SerializedName(SERIALIZED_NAME_CREDIT_AMOUNT)
  private Double creditAmount;

  public static final String SERIALIZED_NAME_DEBIT_AMOUNT = "DebitAmount";
  @SerializedName(SERIALIZED_NAME_DEBIT_AMOUNT)
  private Double debitAmount;

  public static final String SERIALIZED_NAME_WEEK_NUMBER = "WeekNumber";
  @SerializedName(SERIALIZED_NAME_WEEK_NUMBER)
  private Integer weekNumber;

  public static final String SERIALIZED_NAME_PAY_NUMBER = "PayNumber";
  @SerializedName(SERIALIZED_NAME_PAY_NUMBER)
  private Integer payNumber;

  public static final String SERIALIZED_NAME_FILE_DATE_MONTH = "FileDateMonth";
  @SerializedName(SERIALIZED_NAME_FILE_DATE_MONTH)
  private Integer fileDateMonth;

  public static final String SERIALIZED_NAME_FILE_DATE_DAY = "FileDateDay";
  @SerializedName(SERIALIZED_NAME_FILE_DATE_DAY)
  private Integer fileDateDay;

  public static final String SERIALIZED_NAME_FILE_DATE_YEAR = "FileDateYear";
  @SerializedName(SERIALIZED_NAME_FILE_DATE_YEAR)
  private Integer fileDateYear;

  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "EmployeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private String employeeId;

  public static final String SERIALIZED_NAME_EMPLOYEE_DEPARTMENT_DESCRIPTION = "EmployeeDepartmentDescription";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_DEPARTMENT_DESCRIPTION)
  private String employeeDepartmentDescription;

  public static final String SERIALIZED_NAME_EMPLOYEE_DEPARTMENT_CODE = "EmployeeDepartmentCode";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_DEPARTMENT_CODE)
  private Long employeeDepartmentCode;

  public static final String SERIALIZED_NAME_EMPLOYEE_LAST_NAME = "EmployeeLastName";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_LAST_NAME)
  private String employeeLastName;

  public static final String SERIALIZED_NAME_EMPLOYEE_FIRST_NAME = "EmployeeFirstName";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_FIRST_NAME)
  private String employeeFirstName;

  public static final String SERIALIZED_NAME_EMPLOYEE_MIDDLE_NAME = "EmployeeMiddleName";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_MIDDLE_NAME)
  private String employeeMiddleName;

  public static final String SERIALIZED_NAME_EMPLOYEE_NUMBER = "EmployeeNumber";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_NUMBER)
  private Integer employeeNumber;

  public static final String SERIALIZED_NAME_EMPLOYEE_STATUS = "EmployeeStatus";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_STATUS)
  private EmploymentStatus employeeStatus;

  public static final String SERIALIZED_NAME_CHECK_NUMBER = "CheckNumber";
  @SerializedName(SERIALIZED_NAME_CHECK_NUMBER)
  private Long checkNumber;

  public static final String SERIALIZED_NAME_PERIOD_START_DATE = "PeriodStartDate";
  @SerializedName(SERIALIZED_NAME_PERIOD_START_DATE)
  private OffsetDateTime periodStartDate;

  public static final String SERIALIZED_NAME_PERIOD_END_DATE = "PeriodEndDate";
  @SerializedName(SERIALIZED_NAME_PERIOD_END_DATE)
  private OffsetDateTime periodEndDate;

  public JobCosting() {
  }

  public JobCosting legalEntityId(String legalEntityId) {
    
    
    
    
    this.legalEntityId = legalEntityId;
    return this;
  }

   /**
   * Id of the Legal Entity.
   * @return legalEntityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "678556", value = "Id of the Legal Entity.")

  public String getLegalEntityId() {
    return legalEntityId;
  }


  public void setLegalEntityId(String legalEntityId) {
    
    
    
    this.legalEntityId = legalEntityId;
  }


  public JobCosting checkDate(OffsetDateTime checkDate) {
    
    
    
    
    this.checkDate = checkDate;
    return this;
  }

   /**
   * The paycheck date. Also referred to as Pay Date.
   * @return checkDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The paycheck date. Also referred to as Pay Date.")

  public OffsetDateTime getCheckDate() {
    return checkDate;
  }


  public void setCheckDate(OffsetDateTime checkDate) {
    
    
    
    this.checkDate = checkDate;
  }


  public JobCosting departmentDescription(String departmentDescription) {
    
    
    
    
    this.departmentDescription = departmentDescription;
    return this;
  }

   /**
   * Description of department Synonymous with OrganizationDescription
   * @return departmentDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "IT", value = "Description of department Synonymous with OrganizationDescription")

  public String getDepartmentDescription() {
    return departmentDescription;
  }


  public void setDepartmentDescription(String departmentDescription) {
    
    
    
    this.departmentDescription = departmentDescription;
  }


  public JobCosting departmentCode(Long departmentCode) {
    
    
    
    
    this.departmentCode = departmentCode;
    return this;
  }

   /**
   * Numeric code of department  Synonymous with OrganizationCode
   * @return departmentCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "213", value = "Numeric code of department  Synonymous with OrganizationCode")

  public Long getDepartmentCode() {
    return departmentCode;
  }


  public void setDepartmentCode(Long departmentCode) {
    
    
    
    this.departmentCode = departmentCode;
  }


  public JobCosting laborCategory1Code(Integer laborCategory1Code) {
    
    
    
    
    this.laborCategory1Code = laborCategory1Code;
    return this;
  }

   /**
   * Labor category code 1
   * @return laborCategory1Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Labor category code 1")

  public Integer getLaborCategory1Code() {
    return laborCategory1Code;
  }


  public void setLaborCategory1Code(Integer laborCategory1Code) {
    
    
    
    this.laborCategory1Code = laborCategory1Code;
  }


  public JobCosting laborCode1(String laborCode1) {
    
    
    
    
    this.laborCode1 = laborCode1;
    return this;
  }

   /**
   * Labor code 1
   * @return laborCode1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "LCI", value = "Labor code 1")

  public String getLaborCode1() {
    return laborCode1;
  }


  public void setLaborCode1(String laborCode1) {
    
    
    
    this.laborCode1 = laborCode1;
  }


  public JobCosting laborCode1Id(String laborCode1Id) {
    
    
    
    
    this.laborCode1Id = laborCode1Id;
    return this;
  }

   /**
   * Labor Code 1 ID
   * @return laborCode1Id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Job", value = "Labor Code 1 ID")

  public String getLaborCode1Id() {
    return laborCode1Id;
  }


  public void setLaborCode1Id(String laborCode1Id) {
    
    
    
    this.laborCode1Id = laborCode1Id;
  }


  public JobCosting laborCode1Description(String laborCode1Description) {
    
    
    
    
    this.laborCode1Description = laborCode1Description;
    return this;
  }

   /**
   * Description of labor category 1
   * @return laborCode1Description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CIN Location", value = "Description of labor category 1")

  public String getLaborCode1Description() {
    return laborCode1Description;
  }


  public void setLaborCode1Description(String laborCode1Description) {
    
    
    
    this.laborCode1Description = laborCode1Description;
  }


  public JobCosting laborCategory2Code(Integer laborCategory2Code) {
    
    
    
    
    this.laborCategory2Code = laborCategory2Code;
    return this;
  }

   /**
   * Labor category code 1
   * @return laborCategory2Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Labor category code 1")

  public Integer getLaborCategory2Code() {
    return laborCategory2Code;
  }


  public void setLaborCategory2Code(Integer laborCategory2Code) {
    
    
    
    this.laborCategory2Code = laborCategory2Code;
  }


  public JobCosting laborCode2(String laborCode2) {
    
    
    
    
    this.laborCode2 = laborCode2;
    return this;
  }

   /**
   * Labor code 2
   * @return laborCode2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "LCI", value = "Labor code 2")

  public String getLaborCode2() {
    return laborCode2;
  }


  public void setLaborCode2(String laborCode2) {
    
    
    
    this.laborCode2 = laborCode2;
  }


  public JobCosting laborCode2Id(String laborCode2Id) {
    
    
    
    
    this.laborCode2Id = laborCode2Id;
    return this;
  }

   /**
   * Labor Code 2 ID
   * @return laborCode2Id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Job", value = "Labor Code 2 ID")

  public String getLaborCode2Id() {
    return laborCode2Id;
  }


  public void setLaborCode2Id(String laborCode2Id) {
    
    
    
    this.laborCode2Id = laborCode2Id;
  }


  public JobCosting laborCode2Description(String laborCode2Description) {
    
    
    
    
    this.laborCode2Description = laborCode2Description;
    return this;
  }

   /**
   * Description of labor category 1
   * @return laborCode2Description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CIN Location", value = "Description of labor category 1")

  public String getLaborCode2Description() {
    return laborCode2Description;
  }


  public void setLaborCode2Description(String laborCode2Description) {
    
    
    
    this.laborCode2Description = laborCode2Description;
  }


  public JobCosting laborCategory3Code(Integer laborCategory3Code) {
    
    
    
    
    this.laborCategory3Code = laborCategory3Code;
    return this;
  }

   /**
   * Labor category code 3
   * @return laborCategory3Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Labor category code 3")

  public Integer getLaborCategory3Code() {
    return laborCategory3Code;
  }


  public void setLaborCategory3Code(Integer laborCategory3Code) {
    
    
    
    this.laborCategory3Code = laborCategory3Code;
  }


  public JobCosting laborCode3(String laborCode3) {
    
    
    
    
    this.laborCode3 = laborCode3;
    return this;
  }

   /**
   * Labor code 3
   * @return laborCode3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "LCI", value = "Labor code 3")

  public String getLaborCode3() {
    return laborCode3;
  }


  public void setLaborCode3(String laborCode3) {
    
    
    
    this.laborCode3 = laborCode3;
  }


  public JobCosting laborCode3Id(String laborCode3Id) {
    
    
    
    
    this.laborCode3Id = laborCode3Id;
    return this;
  }

   /**
   * Labor Code 3 ID
   * @return laborCode3Id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Job", value = "Labor Code 3 ID")

  public String getLaborCode3Id() {
    return laborCode3Id;
  }


  public void setLaborCode3Id(String laborCode3Id) {
    
    
    
    this.laborCode3Id = laborCode3Id;
  }


  public JobCosting laborCode3Description(String laborCode3Description) {
    
    
    
    
    this.laborCode3Description = laborCode3Description;
    return this;
  }

   /**
   * Description of labor category 3
   * @return laborCode3Description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CIN Location", value = "Description of labor category 3")

  public String getLaborCode3Description() {
    return laborCode3Description;
  }


  public void setLaborCode3Description(String laborCode3Description) {
    
    
    
    this.laborCode3Description = laborCode3Description;
  }


  public JobCosting laborCategory4Code(Integer laborCategory4Code) {
    
    
    
    
    this.laborCategory4Code = laborCategory4Code;
    return this;
  }

   /**
   * Labor category code 4
   * @return laborCategory4Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Labor category code 4")

  public Integer getLaborCategory4Code() {
    return laborCategory4Code;
  }


  public void setLaborCategory4Code(Integer laborCategory4Code) {
    
    
    
    this.laborCategory4Code = laborCategory4Code;
  }


  public JobCosting laborCode4(String laborCode4) {
    
    
    
    
    this.laborCode4 = laborCode4;
    return this;
  }

   /**
   * Labor code 4
   * @return laborCode4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "LCI", value = "Labor code 4")

  public String getLaborCode4() {
    return laborCode4;
  }


  public void setLaborCode4(String laborCode4) {
    
    
    
    this.laborCode4 = laborCode4;
  }


  public JobCosting laborCode4Id(String laborCode4Id) {
    
    
    
    
    this.laborCode4Id = laborCode4Id;
    return this;
  }

   /**
   * Labor Code 4 ID
   * @return laborCode4Id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Job", value = "Labor Code 4 ID")

  public String getLaborCode4Id() {
    return laborCode4Id;
  }


  public void setLaborCode4Id(String laborCode4Id) {
    
    
    
    this.laborCode4Id = laborCode4Id;
  }


  public JobCosting laborCode4Description(String laborCode4Description) {
    
    
    
    
    this.laborCode4Description = laborCode4Description;
    return this;
  }

   /**
   * Description of labor category 4
   * @return laborCode4Description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CIN Location", value = "Description of labor category 4")

  public String getLaborCode4Description() {
    return laborCode4Description;
  }


  public void setLaborCode4Description(String laborCode4Description) {
    
    
    
    this.laborCode4Description = laborCode4Description;
  }


  public JobCosting laborCategory5Code(Integer laborCategory5Code) {
    
    
    
    
    this.laborCategory5Code = laborCategory5Code;
    return this;
  }

   /**
   * Labor category code 5
   * @return laborCategory5Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Labor category code 5")

  public Integer getLaborCategory5Code() {
    return laborCategory5Code;
  }


  public void setLaborCategory5Code(Integer laborCategory5Code) {
    
    
    
    this.laborCategory5Code = laborCategory5Code;
  }


  public JobCosting laborCode5(String laborCode5) {
    
    
    
    
    this.laborCode5 = laborCode5;
    return this;
  }

   /**
   * Labor code 5
   * @return laborCode5
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "LCI", value = "Labor code 5")

  public String getLaborCode5() {
    return laborCode5;
  }


  public void setLaborCode5(String laborCode5) {
    
    
    
    this.laborCode5 = laborCode5;
  }


  public JobCosting laborCode5Id(String laborCode5Id) {
    
    
    
    
    this.laborCode5Id = laborCode5Id;
    return this;
  }

   /**
   * Labor Code 5 ID
   * @return laborCode5Id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Job", value = "Labor Code 5 ID")

  public String getLaborCode5Id() {
    return laborCode5Id;
  }


  public void setLaborCode5Id(String laborCode5Id) {
    
    
    
    this.laborCode5Id = laborCode5Id;
  }


  public JobCosting laborCode5Description(String laborCode5Description) {
    
    
    
    
    this.laborCode5Description = laborCode5Description;
    return this;
  }

   /**
   * Description of labor category 5
   * @return laborCode5Description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CIN Location", value = "Description of labor category 5")

  public String getLaborCode5Description() {
    return laborCode5Description;
  }


  public void setLaborCode5Description(String laborCode5Description) {
    
    
    
    this.laborCode5Description = laborCode5Description;
  }


  public JobCosting laborCategory6Code(Integer laborCategory6Code) {
    
    
    
    
    this.laborCategory6Code = laborCategory6Code;
    return this;
  }

   /**
   * Labor category code 6
   * @return laborCategory6Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Labor category code 6")

  public Integer getLaborCategory6Code() {
    return laborCategory6Code;
  }


  public void setLaborCategory6Code(Integer laborCategory6Code) {
    
    
    
    this.laborCategory6Code = laborCategory6Code;
  }


  public JobCosting laborCode6(String laborCode6) {
    
    
    
    
    this.laborCode6 = laborCode6;
    return this;
  }

   /**
   * Labor code 6
   * @return laborCode6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "LCI", value = "Labor code 6")

  public String getLaborCode6() {
    return laborCode6;
  }


  public void setLaborCode6(String laborCode6) {
    
    
    
    this.laborCode6 = laborCode6;
  }


  public JobCosting laborCode6Id(String laborCode6Id) {
    
    
    
    
    this.laborCode6Id = laborCode6Id;
    return this;
  }

   /**
   * Labor Code 6 ID
   * @return laborCode6Id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Job", value = "Labor Code 6 ID")

  public String getLaborCode6Id() {
    return laborCode6Id;
  }


  public void setLaborCode6Id(String laborCode6Id) {
    
    
    
    this.laborCode6Id = laborCode6Id;
  }


  public JobCosting laborCode6Description(String laborCode6Description) {
    
    
    
    
    this.laborCode6Description = laborCode6Description;
    return this;
  }

   /**
   * Description of labor category 6
   * @return laborCode6Description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CIN Location", value = "Description of labor category 6")

  public String getLaborCode6Description() {
    return laborCode6Description;
  }


  public void setLaborCode6Description(String laborCode6Description) {
    
    
    
    this.laborCode6Description = laborCode6Description;
  }


  public JobCosting glAccountNumber(String glAccountNumber) {
    
    
    
    
    this.glAccountNumber = glAccountNumber;
    return this;
  }

   /**
   * Account number 
   * @return glAccountNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "64", value = "Account number ")

  public String getGlAccountNumber() {
    return glAccountNumber;
  }


  public void setGlAccountNumber(String glAccountNumber) {
    
    
    
    this.glAccountNumber = glAccountNumber;
  }


  public JobCosting glAccountDescription(String glAccountDescription) {
    
    
    
    
    this.glAccountDescription = glAccountDescription;
    return this;
  }

   /**
   * Account description 
   * @return glAccountDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Account One", value = "Account description ")

  public String getGlAccountDescription() {
    return glAccountDescription;
  }


  public void setGlAccountDescription(String glAccountDescription) {
    
    
    
    this.glAccountDescription = glAccountDescription;
  }


  public JobCosting creditAmount(Double creditAmount) {
    
    
    
    
    this.creditAmount = creditAmount;
    return this;
  }

  public JobCosting creditAmount(Integer creditAmount) {
    
    
    
    
    this.creditAmount = creditAmount.doubleValue();
    return this;
  }

   /**
   * Credited amount
   * @return creditAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10.56", value = "Credited amount")

  public Double getCreditAmount() {
    return creditAmount;
  }


  public void setCreditAmount(Double creditAmount) {
    
    
    
    this.creditAmount = creditAmount;
  }


  public JobCosting debitAmount(Double debitAmount) {
    
    
    
    
    this.debitAmount = debitAmount;
    return this;
  }

  public JobCosting debitAmount(Integer debitAmount) {
    
    
    
    
    this.debitAmount = debitAmount.doubleValue();
    return this;
  }

   /**
   * Credited amount
   * @return debitAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1.33", value = "Credited amount")

  public Double getDebitAmount() {
    return debitAmount;
  }


  public void setDebitAmount(Double debitAmount) {
    
    
    
    this.debitAmount = debitAmount;
  }


  public JobCosting weekNumber(Integer weekNumber) {
    
    
    
    
    this.weekNumber = weekNumber;
    return this;
  }

   /**
   * Week number
   * @return weekNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "Week number")

  public Integer getWeekNumber() {
    return weekNumber;
  }


  public void setWeekNumber(Integer weekNumber) {
    
    
    
    this.weekNumber = weekNumber;
  }


  public JobCosting payNumber(Integer payNumber) {
    
    
    
    
    this.payNumber = payNumber;
    return this;
  }

   /**
   * Pay number
   * @return payNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "Pay number")

  public Integer getPayNumber() {
    return payNumber;
  }


  public void setPayNumber(Integer payNumber) {
    
    
    
    this.payNumber = payNumber;
  }


  public JobCosting fileDateMonth(Integer fileDateMonth) {
    
    
    
    
    this.fileDateMonth = fileDateMonth;
    return this;
  }

   /**
   * File Date Month
   * @return fileDateMonth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5", value = "File Date Month")

  public Integer getFileDateMonth() {
    return fileDateMonth;
  }


  public void setFileDateMonth(Integer fileDateMonth) {
    
    
    
    this.fileDateMonth = fileDateMonth;
  }


  public JobCosting fileDateDay(Integer fileDateDay) {
    
    
    
    
    this.fileDateDay = fileDateDay;
    return this;
  }

   /**
   * File date day
   * @return fileDateDay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "11", value = "File date day")

  public Integer getFileDateDay() {
    return fileDateDay;
  }


  public void setFileDateDay(Integer fileDateDay) {
    
    
    
    this.fileDateDay = fileDateDay;
  }


  public JobCosting fileDateYear(Integer fileDateYear) {
    
    
    
    
    this.fileDateYear = fileDateYear;
    return this;
  }

   /**
   * File date year
   * @return fileDateYear
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2010", value = "File date year")

  public Integer getFileDateYear() {
    return fileDateYear;
  }


  public void setFileDateYear(Integer fileDateYear) {
    
    
    
    this.fileDateYear = fileDateYear;
  }


  public JobCosting employeeId(String employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Unique identifier of the employee record in Paycor&#39;s system. Generated by Paycor.
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "52b68a4a-196c-0000-0000-0007d5268Sa2", value = "Unique identifier of the employee record in Paycor's system. Generated by Paycor.")

  public String getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(String employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public JobCosting employeeDepartmentDescription(String employeeDepartmentDescription) {
    
    
    
    
    this.employeeDepartmentDescription = employeeDepartmentDescription;
    return this;
  }

   /**
   * Employee&#39;s organization description
   * @return employeeDepartmentDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Cin Store 105", value = "Employee's organization description")

  public String getEmployeeDepartmentDescription() {
    return employeeDepartmentDescription;
  }


  public void setEmployeeDepartmentDescription(String employeeDepartmentDescription) {
    
    
    
    this.employeeDepartmentDescription = employeeDepartmentDescription;
  }


  public JobCosting employeeDepartmentCode(Long employeeDepartmentCode) {
    
    
    
    
    this.employeeDepartmentCode = employeeDepartmentCode;
    return this;
  }

   /**
   * Employee&#39;s organization code
   * @return employeeDepartmentCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "105", value = "Employee's organization code")

  public Long getEmployeeDepartmentCode() {
    return employeeDepartmentCode;
  }


  public void setEmployeeDepartmentCode(Long employeeDepartmentCode) {
    
    
    
    this.employeeDepartmentCode = employeeDepartmentCode;
  }


  public JobCosting employeeLastName(String employeeLastName) {
    
    
    
    
    this.employeeLastName = employeeLastName;
    return this;
  }

   /**
   * Employee&#39;s last name
   * @return employeeLastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Jones", value = "Employee's last name")

  public String getEmployeeLastName() {
    return employeeLastName;
  }


  public void setEmployeeLastName(String employeeLastName) {
    
    
    
    this.employeeLastName = employeeLastName;
  }


  public JobCosting employeeFirstName(String employeeFirstName) {
    
    
    
    
    this.employeeFirstName = employeeFirstName;
    return this;
  }

   /**
   * Employee&#39;s first name
   * @return employeeFirstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Mary", value = "Employee's first name")

  public String getEmployeeFirstName() {
    return employeeFirstName;
  }


  public void setEmployeeFirstName(String employeeFirstName) {
    
    
    
    this.employeeFirstName = employeeFirstName;
  }


  public JobCosting employeeMiddleName(String employeeMiddleName) {
    
    
    
    
    this.employeeMiddleName = employeeMiddleName;
    return this;
  }

   /**
   * Employee&#39;s middle name
   * @return employeeMiddleName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Esther", value = "Employee's middle name")

  public String getEmployeeMiddleName() {
    return employeeMiddleName;
  }


  public void setEmployeeMiddleName(String employeeMiddleName) {
    
    
    
    this.employeeMiddleName = employeeMiddleName;
  }


  public JobCosting employeeNumber(Integer employeeNumber) {
    
    
    
    
    this.employeeNumber = employeeNumber;
    return this;
  }

   /**
   * Unique number of the employee in the tenant. Generated by Paycor.
   * @return employeeNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "33420", value = "Unique number of the employee in the tenant. Generated by Paycor.")

  public Integer getEmployeeNumber() {
    return employeeNumber;
  }


  public void setEmployeeNumber(Integer employeeNumber) {
    
    
    
    this.employeeNumber = employeeNumber;
  }


  public JobCosting employeeStatus(EmploymentStatus employeeStatus) {
    
    
    
    
    this.employeeStatus = employeeStatus;
    return this;
  }

   /**
   * Get employeeStatus
   * @return employeeStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EmploymentStatus getEmployeeStatus() {
    return employeeStatus;
  }


  public void setEmployeeStatus(EmploymentStatus employeeStatus) {
    
    
    
    this.employeeStatus = employeeStatus;
  }


  public JobCosting checkNumber(Long checkNumber) {
    
    
    
    
    this.checkNumber = checkNumber;
    return this;
  }

   /**
   * Check number.
   * @return checkNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "27463631", value = "Check number.")

  public Long getCheckNumber() {
    return checkNumber;
  }


  public void setCheckNumber(Long checkNumber) {
    
    
    
    this.checkNumber = checkNumber;
  }


  public JobCosting periodStartDate(OffsetDateTime periodStartDate) {
    
    
    
    
    this.periodStartDate = periodStartDate;
    return this;
  }

   /**
   * Period start date. Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard)              
   * @return periodStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2019-11-01T00:00Z", value = "Period start date. Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard)              ")

  public OffsetDateTime getPeriodStartDate() {
    return periodStartDate;
  }


  public void setPeriodStartDate(OffsetDateTime periodStartDate) {
    
    
    
    this.periodStartDate = periodStartDate;
  }


  public JobCosting periodEndDate(OffsetDateTime periodEndDate) {
    
    
    
    
    this.periodEndDate = periodEndDate;
    return this;
  }

   /**
   * Period end date. Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard)              
   * @return periodEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020-10-01T00:00Z", value = "Period end date. Format: YYYY-MM-DDTHH:MM:SSZ  (ISO-8601 standard)              ")

  public OffsetDateTime getPeriodEndDate() {
    return periodEndDate;
  }


  public void setPeriodEndDate(OffsetDateTime periodEndDate) {
    
    
    
    this.periodEndDate = periodEndDate;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the JobCosting instance itself
   */
  public JobCosting putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobCosting jobCosting = (JobCosting) o;
    return Objects.equals(this.legalEntityId, jobCosting.legalEntityId) &&
        Objects.equals(this.checkDate, jobCosting.checkDate) &&
        Objects.equals(this.departmentDescription, jobCosting.departmentDescription) &&
        Objects.equals(this.departmentCode, jobCosting.departmentCode) &&
        Objects.equals(this.laborCategory1Code, jobCosting.laborCategory1Code) &&
        Objects.equals(this.laborCode1, jobCosting.laborCode1) &&
        Objects.equals(this.laborCode1Id, jobCosting.laborCode1Id) &&
        Objects.equals(this.laborCode1Description, jobCosting.laborCode1Description) &&
        Objects.equals(this.laborCategory2Code, jobCosting.laborCategory2Code) &&
        Objects.equals(this.laborCode2, jobCosting.laborCode2) &&
        Objects.equals(this.laborCode2Id, jobCosting.laborCode2Id) &&
        Objects.equals(this.laborCode2Description, jobCosting.laborCode2Description) &&
        Objects.equals(this.laborCategory3Code, jobCosting.laborCategory3Code) &&
        Objects.equals(this.laborCode3, jobCosting.laborCode3) &&
        Objects.equals(this.laborCode3Id, jobCosting.laborCode3Id) &&
        Objects.equals(this.laborCode3Description, jobCosting.laborCode3Description) &&
        Objects.equals(this.laborCategory4Code, jobCosting.laborCategory4Code) &&
        Objects.equals(this.laborCode4, jobCosting.laborCode4) &&
        Objects.equals(this.laborCode4Id, jobCosting.laborCode4Id) &&
        Objects.equals(this.laborCode4Description, jobCosting.laborCode4Description) &&
        Objects.equals(this.laborCategory5Code, jobCosting.laborCategory5Code) &&
        Objects.equals(this.laborCode5, jobCosting.laborCode5) &&
        Objects.equals(this.laborCode5Id, jobCosting.laborCode5Id) &&
        Objects.equals(this.laborCode5Description, jobCosting.laborCode5Description) &&
        Objects.equals(this.laborCategory6Code, jobCosting.laborCategory6Code) &&
        Objects.equals(this.laborCode6, jobCosting.laborCode6) &&
        Objects.equals(this.laborCode6Id, jobCosting.laborCode6Id) &&
        Objects.equals(this.laborCode6Description, jobCosting.laborCode6Description) &&
        Objects.equals(this.glAccountNumber, jobCosting.glAccountNumber) &&
        Objects.equals(this.glAccountDescription, jobCosting.glAccountDescription) &&
        Objects.equals(this.creditAmount, jobCosting.creditAmount) &&
        Objects.equals(this.debitAmount, jobCosting.debitAmount) &&
        Objects.equals(this.weekNumber, jobCosting.weekNumber) &&
        Objects.equals(this.payNumber, jobCosting.payNumber) &&
        Objects.equals(this.fileDateMonth, jobCosting.fileDateMonth) &&
        Objects.equals(this.fileDateDay, jobCosting.fileDateDay) &&
        Objects.equals(this.fileDateYear, jobCosting.fileDateYear) &&
        Objects.equals(this.employeeId, jobCosting.employeeId) &&
        Objects.equals(this.employeeDepartmentDescription, jobCosting.employeeDepartmentDescription) &&
        Objects.equals(this.employeeDepartmentCode, jobCosting.employeeDepartmentCode) &&
        Objects.equals(this.employeeLastName, jobCosting.employeeLastName) &&
        Objects.equals(this.employeeFirstName, jobCosting.employeeFirstName) &&
        Objects.equals(this.employeeMiddleName, jobCosting.employeeMiddleName) &&
        Objects.equals(this.employeeNumber, jobCosting.employeeNumber) &&
        Objects.equals(this.employeeStatus, jobCosting.employeeStatus) &&
        Objects.equals(this.checkNumber, jobCosting.checkNumber) &&
        Objects.equals(this.periodStartDate, jobCosting.periodStartDate) &&
        Objects.equals(this.periodEndDate, jobCosting.periodEndDate)&&
        Objects.equals(this.additionalProperties, jobCosting.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(legalEntityId, checkDate, departmentDescription, departmentCode, laborCategory1Code, laborCode1, laborCode1Id, laborCode1Description, laborCategory2Code, laborCode2, laborCode2Id, laborCode2Description, laborCategory3Code, laborCode3, laborCode3Id, laborCode3Description, laborCategory4Code, laborCode4, laborCode4Id, laborCode4Description, laborCategory5Code, laborCode5, laborCode5Id, laborCode5Description, laborCategory6Code, laborCode6, laborCode6Id, laborCode6Description, glAccountNumber, glAccountDescription, creditAmount, debitAmount, weekNumber, payNumber, fileDateMonth, fileDateDay, fileDateYear, employeeId, employeeDepartmentDescription, employeeDepartmentCode, employeeLastName, employeeFirstName, employeeMiddleName, employeeNumber, employeeStatus, checkNumber, periodStartDate, periodEndDate, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobCosting {\n");
    sb.append("    legalEntityId: ").append(toIndentedString(legalEntityId)).append("\n");
    sb.append("    checkDate: ").append(toIndentedString(checkDate)).append("\n");
    sb.append("    departmentDescription: ").append(toIndentedString(departmentDescription)).append("\n");
    sb.append("    departmentCode: ").append(toIndentedString(departmentCode)).append("\n");
    sb.append("    laborCategory1Code: ").append(toIndentedString(laborCategory1Code)).append("\n");
    sb.append("    laborCode1: ").append(toIndentedString(laborCode1)).append("\n");
    sb.append("    laborCode1Id: ").append(toIndentedString(laborCode1Id)).append("\n");
    sb.append("    laborCode1Description: ").append(toIndentedString(laborCode1Description)).append("\n");
    sb.append("    laborCategory2Code: ").append(toIndentedString(laborCategory2Code)).append("\n");
    sb.append("    laborCode2: ").append(toIndentedString(laborCode2)).append("\n");
    sb.append("    laborCode2Id: ").append(toIndentedString(laborCode2Id)).append("\n");
    sb.append("    laborCode2Description: ").append(toIndentedString(laborCode2Description)).append("\n");
    sb.append("    laborCategory3Code: ").append(toIndentedString(laborCategory3Code)).append("\n");
    sb.append("    laborCode3: ").append(toIndentedString(laborCode3)).append("\n");
    sb.append("    laborCode3Id: ").append(toIndentedString(laborCode3Id)).append("\n");
    sb.append("    laborCode3Description: ").append(toIndentedString(laborCode3Description)).append("\n");
    sb.append("    laborCategory4Code: ").append(toIndentedString(laborCategory4Code)).append("\n");
    sb.append("    laborCode4: ").append(toIndentedString(laborCode4)).append("\n");
    sb.append("    laborCode4Id: ").append(toIndentedString(laborCode4Id)).append("\n");
    sb.append("    laborCode4Description: ").append(toIndentedString(laborCode4Description)).append("\n");
    sb.append("    laborCategory5Code: ").append(toIndentedString(laborCategory5Code)).append("\n");
    sb.append("    laborCode5: ").append(toIndentedString(laborCode5)).append("\n");
    sb.append("    laborCode5Id: ").append(toIndentedString(laborCode5Id)).append("\n");
    sb.append("    laborCode5Description: ").append(toIndentedString(laborCode5Description)).append("\n");
    sb.append("    laborCategory6Code: ").append(toIndentedString(laborCategory6Code)).append("\n");
    sb.append("    laborCode6: ").append(toIndentedString(laborCode6)).append("\n");
    sb.append("    laborCode6Id: ").append(toIndentedString(laborCode6Id)).append("\n");
    sb.append("    laborCode6Description: ").append(toIndentedString(laborCode6Description)).append("\n");
    sb.append("    glAccountNumber: ").append(toIndentedString(glAccountNumber)).append("\n");
    sb.append("    glAccountDescription: ").append(toIndentedString(glAccountDescription)).append("\n");
    sb.append("    creditAmount: ").append(toIndentedString(creditAmount)).append("\n");
    sb.append("    debitAmount: ").append(toIndentedString(debitAmount)).append("\n");
    sb.append("    weekNumber: ").append(toIndentedString(weekNumber)).append("\n");
    sb.append("    payNumber: ").append(toIndentedString(payNumber)).append("\n");
    sb.append("    fileDateMonth: ").append(toIndentedString(fileDateMonth)).append("\n");
    sb.append("    fileDateDay: ").append(toIndentedString(fileDateDay)).append("\n");
    sb.append("    fileDateYear: ").append(toIndentedString(fileDateYear)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    employeeDepartmentDescription: ").append(toIndentedString(employeeDepartmentDescription)).append("\n");
    sb.append("    employeeDepartmentCode: ").append(toIndentedString(employeeDepartmentCode)).append("\n");
    sb.append("    employeeLastName: ").append(toIndentedString(employeeLastName)).append("\n");
    sb.append("    employeeFirstName: ").append(toIndentedString(employeeFirstName)).append("\n");
    sb.append("    employeeMiddleName: ").append(toIndentedString(employeeMiddleName)).append("\n");
    sb.append("    employeeNumber: ").append(toIndentedString(employeeNumber)).append("\n");
    sb.append("    employeeStatus: ").append(toIndentedString(employeeStatus)).append("\n");
    sb.append("    checkNumber: ").append(toIndentedString(checkNumber)).append("\n");
    sb.append("    periodStartDate: ").append(toIndentedString(periodStartDate)).append("\n");
    sb.append("    periodEndDate: ").append(toIndentedString(periodEndDate)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("LegalEntityId");
    openapiFields.add("CheckDate");
    openapiFields.add("DepartmentDescription");
    openapiFields.add("DepartmentCode");
    openapiFields.add("LaborCategory1Code");
    openapiFields.add("LaborCode1");
    openapiFields.add("LaborCode1Id");
    openapiFields.add("LaborCode1Description");
    openapiFields.add("LaborCategory2Code");
    openapiFields.add("LaborCode2");
    openapiFields.add("LaborCode2Id");
    openapiFields.add("LaborCode2Description");
    openapiFields.add("LaborCategory3Code");
    openapiFields.add("LaborCode3");
    openapiFields.add("LaborCode3Id");
    openapiFields.add("LaborCode3Description");
    openapiFields.add("LaborCategory4Code");
    openapiFields.add("LaborCode4");
    openapiFields.add("LaborCode4Id");
    openapiFields.add("LaborCode4Description");
    openapiFields.add("LaborCategory5Code");
    openapiFields.add("LaborCode5");
    openapiFields.add("LaborCode5Id");
    openapiFields.add("LaborCode5Description");
    openapiFields.add("LaborCategory6Code");
    openapiFields.add("LaborCode6");
    openapiFields.add("LaborCode6Id");
    openapiFields.add("LaborCode6Description");
    openapiFields.add("GLAccountNumber");
    openapiFields.add("GLAccountDescription");
    openapiFields.add("CreditAmount");
    openapiFields.add("DebitAmount");
    openapiFields.add("WeekNumber");
    openapiFields.add("PayNumber");
    openapiFields.add("FileDateMonth");
    openapiFields.add("FileDateDay");
    openapiFields.add("FileDateYear");
    openapiFields.add("EmployeeId");
    openapiFields.add("EmployeeDepartmentDescription");
    openapiFields.add("EmployeeDepartmentCode");
    openapiFields.add("EmployeeLastName");
    openapiFields.add("EmployeeFirstName");
    openapiFields.add("EmployeeMiddleName");
    openapiFields.add("EmployeeNumber");
    openapiFields.add("EmployeeStatus");
    openapiFields.add("CheckNumber");
    openapiFields.add("PeriodStartDate");
    openapiFields.add("PeriodEndDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to JobCosting
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!JobCosting.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in JobCosting is not found in the empty JSON string", JobCosting.openapiRequiredFields.toString()));
        }
      }
      if (!jsonObj.get("LegalEntityId").isJsonNull() && (jsonObj.get("LegalEntityId") != null && !jsonObj.get("LegalEntityId").isJsonNull()) && !jsonObj.get("LegalEntityId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LegalEntityId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LegalEntityId").toString()));
      }
      if (!jsonObj.get("DepartmentDescription").isJsonNull() && (jsonObj.get("DepartmentDescription") != null && !jsonObj.get("DepartmentDescription").isJsonNull()) && !jsonObj.get("DepartmentDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DepartmentDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DepartmentDescription").toString()));
      }
      if (!jsonObj.get("LaborCode1").isJsonNull() && (jsonObj.get("LaborCode1") != null && !jsonObj.get("LaborCode1").isJsonNull()) && !jsonObj.get("LaborCode1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LaborCode1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LaborCode1").toString()));
      }
      if (!jsonObj.get("LaborCode1Id").isJsonNull() && (jsonObj.get("LaborCode1Id") != null && !jsonObj.get("LaborCode1Id").isJsonNull()) && !jsonObj.get("LaborCode1Id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LaborCode1Id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LaborCode1Id").toString()));
      }
      if (!jsonObj.get("LaborCode1Description").isJsonNull() && (jsonObj.get("LaborCode1Description") != null && !jsonObj.get("LaborCode1Description").isJsonNull()) && !jsonObj.get("LaborCode1Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LaborCode1Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LaborCode1Description").toString()));
      }
      if (!jsonObj.get("LaborCode2").isJsonNull() && (jsonObj.get("LaborCode2") != null && !jsonObj.get("LaborCode2").isJsonNull()) && !jsonObj.get("LaborCode2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LaborCode2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LaborCode2").toString()));
      }
      if (!jsonObj.get("LaborCode2Id").isJsonNull() && (jsonObj.get("LaborCode2Id") != null && !jsonObj.get("LaborCode2Id").isJsonNull()) && !jsonObj.get("LaborCode2Id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LaborCode2Id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LaborCode2Id").toString()));
      }
      if (!jsonObj.get("LaborCode2Description").isJsonNull() && (jsonObj.get("LaborCode2Description") != null && !jsonObj.get("LaborCode2Description").isJsonNull()) && !jsonObj.get("LaborCode2Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LaborCode2Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LaborCode2Description").toString()));
      }
      if (!jsonObj.get("LaborCode3").isJsonNull() && (jsonObj.get("LaborCode3") != null && !jsonObj.get("LaborCode3").isJsonNull()) && !jsonObj.get("LaborCode3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LaborCode3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LaborCode3").toString()));
      }
      if (!jsonObj.get("LaborCode3Id").isJsonNull() && (jsonObj.get("LaborCode3Id") != null && !jsonObj.get("LaborCode3Id").isJsonNull()) && !jsonObj.get("LaborCode3Id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LaborCode3Id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LaborCode3Id").toString()));
      }
      if (!jsonObj.get("LaborCode3Description").isJsonNull() && (jsonObj.get("LaborCode3Description") != null && !jsonObj.get("LaborCode3Description").isJsonNull()) && !jsonObj.get("LaborCode3Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LaborCode3Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LaborCode3Description").toString()));
      }
      if (!jsonObj.get("LaborCode4").isJsonNull() && (jsonObj.get("LaborCode4") != null && !jsonObj.get("LaborCode4").isJsonNull()) && !jsonObj.get("LaborCode4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LaborCode4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LaborCode4").toString()));
      }
      if (!jsonObj.get("LaborCode4Id").isJsonNull() && (jsonObj.get("LaborCode4Id") != null && !jsonObj.get("LaborCode4Id").isJsonNull()) && !jsonObj.get("LaborCode4Id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LaborCode4Id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LaborCode4Id").toString()));
      }
      if (!jsonObj.get("LaborCode4Description").isJsonNull() && (jsonObj.get("LaborCode4Description") != null && !jsonObj.get("LaborCode4Description").isJsonNull()) && !jsonObj.get("LaborCode4Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LaborCode4Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LaborCode4Description").toString()));
      }
      if (!jsonObj.get("LaborCode5").isJsonNull() && (jsonObj.get("LaborCode5") != null && !jsonObj.get("LaborCode5").isJsonNull()) && !jsonObj.get("LaborCode5").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LaborCode5` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LaborCode5").toString()));
      }
      if (!jsonObj.get("LaborCode5Id").isJsonNull() && (jsonObj.get("LaborCode5Id") != null && !jsonObj.get("LaborCode5Id").isJsonNull()) && !jsonObj.get("LaborCode5Id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LaborCode5Id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LaborCode5Id").toString()));
      }
      if (!jsonObj.get("LaborCode5Description").isJsonNull() && (jsonObj.get("LaborCode5Description") != null && !jsonObj.get("LaborCode5Description").isJsonNull()) && !jsonObj.get("LaborCode5Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LaborCode5Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LaborCode5Description").toString()));
      }
      if (!jsonObj.get("LaborCode6").isJsonNull() && (jsonObj.get("LaborCode6") != null && !jsonObj.get("LaborCode6").isJsonNull()) && !jsonObj.get("LaborCode6").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LaborCode6` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LaborCode6").toString()));
      }
      if (!jsonObj.get("LaborCode6Id").isJsonNull() && (jsonObj.get("LaborCode6Id") != null && !jsonObj.get("LaborCode6Id").isJsonNull()) && !jsonObj.get("LaborCode6Id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LaborCode6Id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LaborCode6Id").toString()));
      }
      if (!jsonObj.get("LaborCode6Description").isJsonNull() && (jsonObj.get("LaborCode6Description") != null && !jsonObj.get("LaborCode6Description").isJsonNull()) && !jsonObj.get("LaborCode6Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LaborCode6Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LaborCode6Description").toString()));
      }
      if (!jsonObj.get("GLAccountNumber").isJsonNull() && (jsonObj.get("GLAccountNumber") != null && !jsonObj.get("GLAccountNumber").isJsonNull()) && !jsonObj.get("GLAccountNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `GLAccountNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("GLAccountNumber").toString()));
      }
      if (!jsonObj.get("GLAccountDescription").isJsonNull() && (jsonObj.get("GLAccountDescription") != null && !jsonObj.get("GLAccountDescription").isJsonNull()) && !jsonObj.get("GLAccountDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `GLAccountDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("GLAccountDescription").toString()));
      }
      if (!jsonObj.get("EmployeeId").isJsonNull() && (jsonObj.get("EmployeeId") != null && !jsonObj.get("EmployeeId").isJsonNull()) && !jsonObj.get("EmployeeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EmployeeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EmployeeId").toString()));
      }
      if (!jsonObj.get("EmployeeDepartmentDescription").isJsonNull() && (jsonObj.get("EmployeeDepartmentDescription") != null && !jsonObj.get("EmployeeDepartmentDescription").isJsonNull()) && !jsonObj.get("EmployeeDepartmentDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EmployeeDepartmentDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EmployeeDepartmentDescription").toString()));
      }
      if (!jsonObj.get("EmployeeLastName").isJsonNull() && (jsonObj.get("EmployeeLastName") != null && !jsonObj.get("EmployeeLastName").isJsonNull()) && !jsonObj.get("EmployeeLastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EmployeeLastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EmployeeLastName").toString()));
      }
      if (!jsonObj.get("EmployeeFirstName").isJsonNull() && (jsonObj.get("EmployeeFirstName") != null && !jsonObj.get("EmployeeFirstName").isJsonNull()) && !jsonObj.get("EmployeeFirstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EmployeeFirstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EmployeeFirstName").toString()));
      }
      if (!jsonObj.get("EmployeeMiddleName").isJsonNull() && (jsonObj.get("EmployeeMiddleName") != null && !jsonObj.get("EmployeeMiddleName").isJsonNull()) && !jsonObj.get("EmployeeMiddleName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EmployeeMiddleName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EmployeeMiddleName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!JobCosting.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'JobCosting' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<JobCosting> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(JobCosting.class));

       return (TypeAdapter<T>) new TypeAdapter<JobCosting>() {
           @Override
           public void write(JsonWriter out, JobCosting value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public JobCosting read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             JobCosting instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of JobCosting given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of JobCosting
  * @throws IOException if the JSON string is invalid with respect to JobCosting
  */
  public static JobCosting fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, JobCosting.class);
  }

 /**
  * Convert an instance of JobCosting to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

